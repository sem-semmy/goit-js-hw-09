{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAgBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAxBPL,EAAKY,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAKgB,OAAOC,MAAOF,IACrCZ,EAAcY,EAAI,EAAGG,OAAOlB,EAAKK,MAAMY,OAASC,OAAOlB,EAAKmB,KAAKF,OAASF,GACvEK,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAuB,OAAOC,QAAQ,uBAAqBlB,QAAiBC,UAEtDkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAuB,OAAOG,QAAQ,sBAAoBpB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\nform.addEventListener('submit', formSubmit);\n\nfunction formSubmit(event) {\n  event.preventDefault();\n  for (let i = 0; i < form.amount.value; i++) {\n    createPromise(i + 1, Number(form.delay.value) + Number(form.step.value) * i)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","i","amount","value","Number","step","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.a4e270e2.js.map"}